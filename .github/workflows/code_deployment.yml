name: Deploy Word Counter

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'word_count/**'
  
jobs:
  release_image:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    outputs:
      ecr_registry: "${{ steps.login_ecr.outputs.registry }}"

    steps:
      - uses: actions/checkout@v3
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          mask-aws-account-id: no
          aws-access-key-id: ${{ secrets.WC_TF_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.WC_TF_AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
          ECR_REPOSITORY: wc-python
          IMAGE_TAG: latest
        working-directory: ./word_count
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy_docker:
    needs: [release_image]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - run: echo "${{ needs.release_image.outputs.ecr_registry }}"
      - name: AWS SSM Send-Command
        uses: peterkimzz/aws-ssm-send-command@master
        id: ssm
        with:
          aws-region: us-east-1
          aws-access-key-id: "${{ secrets.WC_TF_AWS_ACCESS_KEY }}"
          aws-secret-access-key: "${{ secrets.WC_TF_AWS_SECRET_KEY }}"
          instance-ids: ${{ secrets.WC_EC2_INSTANCE_ID }}

          working-directory: /home/ec2-user
          command: | 
            sudo su
            docker run -d "${{ needs.release_image.outputs.ecr_registry }}/wc-python:latest"
          comment: Run Docker
